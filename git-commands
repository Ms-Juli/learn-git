# Git команды:
```
git init - инициализировать локальный репозиторий
git add . - добавить на отслеживание все изменения
git add README.md - добавить на отслеживание файл README.md
git status - посмотреть состояние (изменения) (какие файлы отслеживаются, а какие нет)
git commit -m 'first commit' - сохранить состояние изменений
git push - внести изменения на удаленный репозиторий
git clone (url) - скопировать удаленный репозиторий
```	
Первоначальная настройка git

git config --list - посмотреть заданную конфигурацию
git config --global - глобальная настройка конфигурации git 
(на уровне всей системы)
git config --global user.name antelopest
git config --global user.email "dddd@gmail.com"
git config --local - локальная настройка конфигурации git 
(в уровне репозитория)
git config --local user.name ddddd
git config --local user.email "dddd@gmail.com"
git status - посмотреть состояние файлов ветки (в том числе получить название ветки на которой сейчас находишься)
git branch - получить список текущих веток (выход через q)
git branch <name of new branch> - создать ветку
git checkout <name branch> - переход на ветку
git checkout -b <name of new branch> - создать ветку и перейти на неё
git branch -m <new name branch> - переименовать название ветки
git push origin <name branch> - запушить новую ветку в удаленный репозиторий
git merge <name branch> - влить ветку в текущую ветку
git pull - получить обновление с удаленного репозитория для локального репозитория
git log - посмотреть историю коммитов (выход через q)
git diff <key commit> <key commit> - посмотреть разницу между коммитами (выход через q)
git status
git rm -f index.html - удаление файла из отслеживания
git rm -fr * - удалит все файлы и папки из отслеживания
git branch -d 22dec2023 - удаление ветки в локальном репозитории
git push origin --delete 22dec2023 - удаление ветки из удаленного репозитория

Работа с изменениями

git stash - отправить все изменения в архив

git stash pop - вернуть все изменения из архива (при этом изменения будут удалены из архива)
git stash apply - вернуть все изменения из архива (при этом все изменения остануться в архиве)
git stash show - посмотреть различия между архивами
git stash list - показать существующие архивы (выход через q)
git stash save "save name" - сделать git stash c названием архива
git stash drop stash@{1} - удаление архива
git stash clear - удаление всех архивов
